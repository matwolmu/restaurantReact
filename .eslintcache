[{"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\index.js":"1","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\App.js":"2","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\reportWebVitals.js":"3","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\login.js":"4","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\test.js":"5","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\navbar.js":"6","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\home.js":"7","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\footer.js":"8","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\context\\auth.js":"9","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\context\\order.js":"10","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\basket.js":"11","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\management.js":"12","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\gql_queries\\index.js":"13","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\dish_private.js":"14","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\dish_public.js":"15","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\addDishForm.js":"16","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\checkout.js":"17","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\customerInfoForm.js":"18","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\finished.js":"19","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\stats.js":"20","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\dish_private_ALT.js":"21","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\addDish.js":"22","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\about.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":2154,"mtime":1613051934587,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":3101,"mtime":1612606897329,"results":"28","hashOfConfig":"25"},{"size":2820,"mtime":1612268762892,"results":"29","hashOfConfig":"25"},{"size":3252,"mtime":1612881170636,"results":"30","hashOfConfig":"25"},{"size":6511,"mtime":1612775908861,"results":"31","hashOfConfig":"25"},{"size":829,"mtime":1611322168427,"results":"32","hashOfConfig":"25"},{"size":1544,"mtime":1611850247657,"results":"33","hashOfConfig":"25"},{"size":4873,"mtime":1611832146642,"results":"34","hashOfConfig":"25"},{"size":4360,"mtime":1612550294255,"results":"35","hashOfConfig":"25"},{"size":2112,"mtime":1612607904374,"results":"36","hashOfConfig":"25"},{"size":2334,"mtime":1612981182191,"results":"37","hashOfConfig":"25"},{"size":6033,"mtime":1612614434018,"results":"38","hashOfConfig":"25"},{"size":2359,"mtime":1612551917256,"results":"39","hashOfConfig":"25"},{"size":6580,"mtime":1612778809531,"results":"40","hashOfConfig":"25"},{"size":1641,"mtime":1612537562420,"results":"41","hashOfConfig":"25"},{"size":6217,"mtime":1612551107948,"results":"42","hashOfConfig":"25"},{"size":567,"mtime":1612549712018,"results":"43","hashOfConfig":"25"},{"size":7894,"mtime":1612982732019,"results":"44","hashOfConfig":"25"},{"size":7554,"mtime":1612794489337,"results":"45","hashOfConfig":"25"},{"size":2107,"mtime":1612607369250,"results":"46","hashOfConfig":"25"},{"size":699,"mtime":1613054232764,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1j1h64y",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\index.js",[],["110","111"],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\App.js",["112","113","114","115"],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\login.js",["116","117","118","119","120","121","122","123"],"import {useState, useEffect, useContext } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client';\r\nimport {LOGIN_MUTATION} from '../gql_queries/index';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {AuthContext} from '../context/auth';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Login () {\r\n  const history = useHistory();\r\n  const context = useContext(AuthContext)\r\n  const [loginData, setLoginData] = useState({\r\n    userName: \"admin\",\r\n    pw: \"admin\"\r\n  });\r\n  \r\n  const [login] = useMutation(LOGIN_MUTATION, {\r\n    variables: loginData,\r\n    onCompleted: ({ login }) => {\r\n      if(login.msg === \"OK\"){\r\n        localStorage.setItem('jwt', login.token);\r\n        context.login(login)\r\n        history.push('/management')\r\n      }else{\r\n        console.log(\"login failed\")  \r\n        console.log(login)\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n  \r\nfunction handleFormChange(e){\r\n  if(e.target.name === \"userName\" || e.target.name === \"pw\"){\r\n    setLoginData(prevState => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n  }));\r\n  } else {\r\n    console.log(\"hrmpf\")\r\n  }\r\n}\r\n\r\nfunction handleSubmit(e){\r\n  e.preventDefault();\r\n  login()\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Login</h1>\r\n \r\n      <form onChange={handleFormChange} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" name=\"userName\" value={loginData.userName}/>\r\n      </label>\r\n      <label>\r\n        Name:\r\n        <input type=\"password\" name=\"pw\" value=\"admin\"/>\r\n      </label>\r\n      <div class=\"card-action wrapToCenter\" >\r\n          <button type=\"submit\" className=\"waves-effect waves-light btn\">Submit</button>\r\n      </div>\r\n    </form>\r\n\r\n    </div>\r\n\r\n\r\n      \r\n  );\r\n\r\n};\r\n \r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n     <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n   //      } else if (\r\n   //        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    //     ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         if (!values.password) {\r\n            errors.password = 'Required';\r\n          } \r\n         \r\n         return errors;\r\n       }}\r\n\r\n       onSubmit={(values, { setSubmitting }) => {\r\n        console.log(loginData);\r\n        lazy_login()       \r\n       }}\r\n     >\r\n       {({ isSubmitting }) => (\r\n\r\n\r\n<div className=\"row\">\r\n         <Form className=\"col 6\"  onChange={handleFormChange}>\r\n           <Field type=\"email\" name=\"userName\" placeholder=\"email\"/>\r\n           <ErrorMessage name=\"email\" component=\"div\" />\r\n           <Field type=\"password\" name=\"pw\" placeholder=\"password\"/>\r\n           <ErrorMessage name=\"password\" component=\"div\" />\r\n           <button type=\"submit\" disabled={isSubmitting} className=\"waves-effect waves-light btn\">\r\n             Submit\r\n           </button>\r\n         </Form>\r\n</div>\r\n\r\n\r\n       )}\r\n     </Formik>\r\n*/\r\n\r\n","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\test.js",[],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\navbar.js",["124","125","126","127","128","129","130","131","132"],"import {useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {AuthContext} from '../context/auth';\r\nimport logo from '../chefHat.jpg';\r\n\r\n\r\n\r\n\r\nfunction Navbar (){\r\n    const history = useHistory();\r\n    const context = useContext(AuthContext)\r\n    const [aboutPageActive, setAboutPageActive] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n      context.setActiveMenuItem(\"manage\")\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      context.activeMenuItem === \"manage\" && history.push('/management')\r\n      context.activeMenuItem === \"add\" && history.push('/addDish')\r\n      context.activeMenuItem === \"stats\" && history.push('/stats')\r\n\r\n    }, [context.activeMenuItem])\r\n\r\n\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        history.push('/login')\r\n        setAboutPageActive(false)\r\n    }\r\n\r\n    const handleLogout = (e) => {\r\n      e.preventDefault()\r\n      if(localStorage.getItem('jwt')){\r\n        console.log(\"jwt found\")\r\n        localStorage.removeItem('jwt');\r\n        context.logout()\r\n      }else{\r\n        console.log(\"should have a jwt\")\r\n      }\r\n      context.setActiveMenuItem(\"manage\")\r\n      history.push('/')\r\n      setAboutPageActive(false)\r\n    }\r\n\r\n    const handleAbout = (e) => {\r\n      e.preventDefault()\r\n      context.logout()\r\n      if(aboutPageActive){\r\n        setAboutPageActive(false)\r\n        history.push('/')\r\n        context.logout()\r\n      } else {\r\n        setAboutPageActive(true)\r\n        history.push('/about')\r\n      }\r\n      \r\n  }\r\n\r\n\r\n\r\n// <a href=\"#\" className=\"brand-logo\">Logo</a>\r\n\r\n    return (\r\n        \r\n\r\n    <div>\r\n      <nav className=\"nav-extended  teal lighten-1\" id=\"navbar\">\r\n        <div className=\"nav-wrapper\">\r\n          \r\n         \r\n          <ul id=\"nav-mobile\" className=\"right \">\r\n            <li ><a href=\"\"  onClick={handleAbout}>{aboutPageActive ? \"Back to Menu\" : \"About this Project\"}</a></li>      \r\n            <li>\r\n              {context.user ? \r\n                <a href=\"\"  onClick={handleLogout}>Logout</a> \r\n                : // else\r\n                <a href=\"\"  onClick={handleLogin}>Login</a> }\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      \r\n      {context.user ? \r\n      // show sub menu\r\n        <div className=\"nav-content\">\r\n        <ul className=\"tabs tabs-transparent \" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\r\n        <li className=\"tab\">\r\n            <a onClick={(e) => context.setActiveMenuItem(\"manage\")}\r\n              className={context.activeMenuItem === \"manage\" ? \"active\" : \"\"} >\r\n              Manage Dishes\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"tab\">\r\n            <a onClick={(e) => context.setActiveMenuItem(\"add\")}\r\n              className={context.activeMenuItem === \"add\" ? \"active\" : \"\"} >\r\n              Add Dish\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"tab\">\r\n            <a onClick={(e) => context.setActiveMenuItem(\"stats\")}\r\n              className={context.activeMenuItem === \"stats\" ? \"active\" : \"\"} >\r\n              Stats\r\n            </a>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>  : <div></div> }  \r\n      \r\n    </nav>\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n        \r\n      );\r\n}\r\n\r\n\r\nexport default Navbar;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\home.js",["133","134","135","136","137","138","139","140","141","142"],"import { useHistory, useLocation,  } from \"react-router-dom\";\r\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client';\r\nimport React, {useContext, useState, useEffect} from 'react';\r\nimport {OrderContext} from '../context/order';\r\nimport {AuthContext} from '../context/auth';\r\nimport {GET_DISHES_QUERY} from '../gql_queries/index';\r\nimport Basket from './basket';\r\nimport Dish_public from './dish_public';\r\nimport headerImage from '../headerImage.jpg';\r\nimport headerImageSMALL from '../headerImageSMALL.jpg';\r\n\r\n\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ShoppingCartSharp from '@material-ui/icons/ShoppingCartSharp';\r\nimport ArrowUpwardSharp from '@material-ui/icons/ArrowUpwardSharp';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Home (){\r\n    const classes = useStyles();\r\n    const order_ontext = useContext(OrderContext)\r\n    const { loading, error, data } = useQuery(GET_DISHES_QUERY);\r\n    \r\n    const [scrolledToBottom, setScrolledToBottom] = React.useState(false);\r\n    const [uniqueCategories, setUniqueCategories] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n   //     window.onscroll = () => {\r\n   //         handleScroll()\r\n   //     }\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        if(data){\r\n            const uniqueCats = [...new Set(data.getDishes.map(dish => {\r\n                if(dish.availible){\r\n                  return dish.category  \r\n                }\r\n            }))]\r\n            setUniqueCategories(uniqueCats)\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n\r\n    const scrollOnBasketButtonClick = () => {\r\n        console.log(scrolledToBottom)\r\n        const floatingButton = document.getElementById('floatingButton')\r\n        if(scrolledToBottom){\r\n            document.getElementById('navbar').scrollIntoView()\r\n            setScrolledToBottom(false)\r\n        } else {\r\n            document.getElementById('basket').scrollIntoView()\r\n            floatingButton.classList.add('floatingButton_Bottom');\r\n            floatingButton.classList.remove('floatingButton_TOP');\r\n            setScrolledToBottom(true)\r\n        }\r\n    }\r\n\r\n    const handleScroll = () => {\r\n        const totalPageHeight = document.body.scrollHeight; \r\n        const scrollPoint = window.scrollY + window.innerHeight;\r\n        const floatingButton = document.getElementById('floatingButton')\r\n        if(scrollPoint >= totalPageHeight){\r\n            floatingButton && floatingButton.classList.add('floatingButton_TOP');\r\n            floatingButton && floatingButton.classList.remove('floatingButton_Bottom');\r\n            setScrolledToBottom(true)\r\n        } else {\r\n            floatingButton && floatingButton.classList.add('floatingButton_Bottom');\r\n            floatingButton && floatingButton.classList.remove('floatingButton_TOP');\r\n            setScrolledToBottom(false)\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    const dishesByCategory = data && uniqueCategories.map(uniqueCategory => {\r\n        return { \r\n            category: uniqueCategory,\r\n            dishes: data.getDishes.filter( dish => {\r\n                         return dish.category === uniqueCategory\r\n                        })\r\n            }\r\n    })\r\n    console.log(dishesByCategory)\r\n\r\n    let dishes\r\n    if(loading){\r\n        dishes =  <div className={classes.root}>\r\n                    <CircularProgress />\r\n                </div>\r\n    } else if(data){\r\n        dishes = dishesByCategory ? uniqueCategories.map(category => {\r\n            const dishesOfCategory = dishesByCategory.find(o => o.category === category)\r\n            return (<div id={category} className=\"card\">\r\n                        <h5 className=\"green-text lighten-4\">\r\n                            {category}\r\n                        </h5>\r\n                        <div className=\" \">\r\n                            {dishesOfCategory.dishes.map(dish => {\r\n                                if(dish.availible){\r\n                                    return <Dish_public key={dish.id} dish={dish}/>\r\n                            }\r\n                            })}\r\n                        </div>\r\n                        <div class=\"divider\"></div>\r\n                    </div>)\r\n            \r\n        }) : <p>no dishes</p>\r\n    } \r\n\r\n\r\n    let basketButton;\r\n    if(!scrolledToBottom){\r\n        basketButton = (\r\n            <Badge badgeContent={order_ontext.orderedDishes.length} color=\"primary\">\r\n                <ShoppingCartSharp />\r\n            </Badge>)\r\n    } else {\r\n        basketButton = (\r\n            <Badge  color=\"primary\">\r\n                <ArrowUpwardSharp />\r\n            </Badge>)\r\n    }\r\n\r\n    const categoryMenuItems = uniqueCategories.map(cat => {\r\n        return <a href={\"#\" + cat} className=\"categoryMenuItem white-text text-lighten-4\">{cat}</a>\r\n    })\r\n    \r\n\r\n    \r\n\r\n    return (\r\n\r\n        <div>\r\n            <img src={headerImage} alt=\"Logo\" width=\"100%\" height=\"200px\" className=\"hide-on-small-only\"/>\r\n            <img src={headerImageSMALL} alt=\"Logo\" width=\"100%\" height=\"100px\"  className=\"hide-on-med-and-up\"/>\r\n\r\n            <div className=\"row container\" >\r\n            <div id=\"categoryMenu\" className=\"green lighten-3\">\r\n                {categoryMenuItems}\r\n                </div>\r\n            <div className=\"card\" style={{margin: \"5px\"}}>\r\n                 \r\n                    \r\n                <div className=\"menu col s12 m8\" >\r\n                    <div className=\"\">\r\n                        {dishes}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n\r\n\r\n            <div id=\"basket\" className=\"basket col s12 m4\">\r\n                    <Basket />\r\n            </div>\r\n\r\n            <div className=\"hide-on-med-and-up\">\r\n                <a id=\"floatingButton\"\r\n                    className=\"btn-floating btn-large waves-effect waves-light red floatingButton_Bottom\"\r\n                    onClick={() => scrollOnBasketButtonClick()}\r\n                    \r\n                    >\r\n                    {basketButton}\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        \r\n      );\r\n}\r\n\r\n\r\nexport default Home;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\footer.js",["143","144"],"import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction Footer (){\r\n\r\n\r\n    return (\r\n        <footer className=\"page-footer\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">Footer Content</h5>\r\n                <p className=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            © 2014 Copyright Text\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        \r\n      );\r\n}\r\n\r\n\r\nexport default Footer;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\context\\auth.js",[],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\context\\order.js",["145"],"import React, {useReducer, createContext } from 'react';\r\n\r\n\r\nexport const OrderContext = createContext({\r\n    orderedDishes: [],\r\n    orderSum: 0,\r\n    delivery: null,\r\n    payment: \"\",\r\n    addDish: (dish) => {},\r\n    deleteDish: (id) => {},\r\n    increaseDish: (id) => {},\r\n    decreaseDish: (id) => {},\r\n    setDelivery: (booleanValue)  => {},\r\n    setPayment: (payment) => {},\r\n    reset: () => {}\r\n})\r\n\r\n\r\nfunction getSum(array){\r\n    if(array.length === 0){\r\n        return 0\r\n    }else{\r\n        return array.map((entry)=>{\r\n                return entry.price * entry.amount\r\n            }).reduce((a, b) => a + b, 0).toFixed(2);\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nfunction orderReducer(state, action){\r\n    switch(action.type){\r\n        case 'ADD_DISH':\r\n            console.log(\"orderedDishes\")\r\n            console.log(state.orderedDishes)\r\n            const tmp = [...state.orderedDishes]\r\n            tmp.push(action.payload)\r\n            return{\r\n                ...state,\r\n                orderedDishes: tmp,\r\n                orderSum: getSum(tmp)\r\n    \r\n            }\r\n        case 'DELETE_DISH':\r\n            const filtered = state.orderedDishes.filter(function(item) {\r\n                if(item.id !== action.payload){\r\n                    return item\r\n                }\r\n            })\r\n            return{\r\n                ...state,\r\n                orderedDishes: filtered,\r\n                orderSum: getSum(filtered)  \r\n            }    \r\n        case 'INCREASE':\r\n            const result_inc = state.orderedDishes.map((x) => {\r\n                if(x.id === action.payload){\r\n                    const plusOne = x.amount + 1\r\n                    return {\r\n                        ...x,\r\n                        amount: plusOne\r\n                    }\r\n                } else {\r\n                    return x\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                orderedDishes: result_inc,\r\n                orderSum: getSum(result_inc)\r\n            }; \r\n        case 'DECREASE':\r\n            const result_dec = state.orderedDishes.map((x) => {\r\n                if(x.id === action.payload){\r\n                    if(x.amount > 0){\r\n                        const minusOne = x.amount - 1\r\n                        return {\r\n                            ...x,\r\n                            amount: minusOne\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            ...x,\r\n                        }\r\n                    }       \r\n                } else {\r\n                    return x\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                orderedDishes: result_dec,\r\n                orderSum: getSum(result_dec)\r\n            };\r\n        case 'DELIVERY':\r\n            return {\r\n                ...state,\r\n                delivery: action.payload \r\n            }; \r\n        case 'PAY':\r\n            return {\r\n                ...state,\r\n                payment: action.payload \r\n            }; \r\n        case 'RESET':\r\n            return {\r\n                ...state,\r\n                orderedDishes: [],\r\n                orderSum: 0,\r\n                delivery: null,\r\n                payment: \"\"\r\n            }; \r\n        default:\r\n            return state;       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function OrderProvider(props){\r\n    const [state, dispatch] = useReducer(orderReducer, \r\n        {orderedDishes: [], orderSum: 0, delivery: null , payment: \"\"})\r\n\r\n    function addDish(dish){\r\n        console.log(\"added one\")\r\n        dispatch({\r\n            type: 'ADD_DISH',\r\n            payload: dish\r\n        })\r\n    }\r\n\r\n    function deleteDish(id){\r\n        console.log(\"added one\")\r\n        dispatch({\r\n            type: 'DELETE_DISH',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function increaseDish(id){\r\n        dispatch({\r\n            type: 'INCREASE',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function decreaseDish(id){\r\n        dispatch({\r\n            type: 'DECREASE',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function setDelivery(booleanValue){\r\n        dispatch({\r\n            type: 'DELIVERY',\r\n            payload: booleanValue\r\n        })\r\n    }\r\n\r\n    function setPayment(payment){\r\n        dispatch({ \r\n            type: 'PAY',\r\n            payload: payment\r\n        })\r\n    }\r\n\r\n    function reset(){\r\n        dispatch({ \r\n            type: 'RESET'\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <OrderContext.Provider\r\n            value={{orderedDishes: state.orderedDishes, \r\n                orderSum: state.orderSum, \r\n                delivery: state.delivery,\r\n                payment: state.payment,\r\n                addDish, deleteDish, increaseDish, decreaseDish, setDelivery, setPayment, reset}} \r\n            {...props} \r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\basket.js",["146","147","148","149","150","151","152"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport {OrderContext} from '../context/order';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction  Basket() {\r\n  const history = useHistory();\r\n  const order_ontext = useContext(OrderContext)\r\n  const [prceedButtonDisabled, setPrceedButtonDisabled] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(order_ontext.delivery)\r\n    if(order_ontext.delivery == null || order_ontext.delivery == undefined){\r\n      order_ontext.setDelivery(true)\r\n    }\r\n    setPrceedButtonDisabled(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(order_ontext.orderedDishes.length === 0){\r\n      setPrceedButtonDisabled(true)\r\n    } else {\r\n      if(prceedButtonDisabled){\r\n        setPrceedButtonDisabled(false)\r\n      }\r\n    }\r\n  }, [order_ontext.orderedDishes])\r\n\r\n\r\n\r\n\r\n\r\n  const decrease = (id) => {\r\n    const duplicates = order_ontext.orderedDishes.filter(x => x.id === id)\r\n    if(duplicates.length != 0){\r\n        order_ontext.decreaseDish(id)\r\n    } else {\r\n      console.log(\"basket.js function decrease\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const entries = order_ontext.orderedDishes.map((entry)=>{\r\n    return (<li key={entry.id} className=\"collection-item\">\r\n              <div>\r\n                  <div>{entry.name}</div>\r\n                  <div>Amount: {entry.amount}</div>\r\n                  <div>{(entry.amount * entry.price).toFixed(2) } €</div>\r\n              </div>\r\n\r\n              <div className=\"basketItemButtonsWrapper\">\r\n                  <a href=\"#!\"  onClick={() => {decrease(entry.id)}} >\r\n                    <i className=\"small material-icons\" style={{fontSize: \"1.5rem\"}}>remove_circle</i>\r\n                  </a>\r\n                  <a href=\"#!\" onClick={() => {order_ontext.increaseDish(entry.id)}} >\r\n                    <i className=\"small material-icons\" style={{fontSize: \"1.5rem\"}}>add_circle</i>\r\n                  </a>\r\n                  <a href=\"#!\" onClick={() => {order_ontext.deleteDish(entry.id)}} >\r\n                    <i className=\"small material-icons red-text\" style={{fontSize: \"1.5rem\"}}>delete_forever</i>\r\n                  </a>\r\n              </div>\r\n            </li>)\r\n  })\r\n  \r\nlet test = \"card\"\r\nif(order_ontext.orderedDishes.length > 0){\r\n  test += \" orange lighten-3\"\r\n} else {\r\n  test += \" grey lighten-4\"\r\n}\r\n  \r\n      return (\r\n        <div className={test}>\r\n          <div classNem=\"card-content white-text\">\r\n\r\n          <div className=\"card-title center-align \">\r\n            <div className=\" wrapToCenter\">\r\n              <i className=\"large material-icons hide-on-small-only\">shopping_cart</i>\r\n              <div className=\"hide-on-med-and-up show-on-small\">Your Order:</div>\r\n            </div>\r\n          </div>\r\n\r\n            <div>\r\n              <ul className=\"collection with-header\">\r\n                {entries}\r\n              </ul>\r\n            </div>\r\n              \r\n            <div className=\"center-align\">\r\n                <div>\r\n                  <div>Please choose:</div>\r\n                  <div className=\"wrapToCenter\">\r\n                    <label>\r\n                    <input name=\"group1\" type=\"radio\" className=\" with-gap\"\r\n                    checked={order_ontext.delivery} onClick={() => order_ontext.setDelivery(true)} />\r\n                    <span className=\" black-text \" >Delivery</span>\r\n                    </label>\r\n                    <label style={{justifyContent: \"space-around\"}}>\r\n                      <input name=\"group1\" type=\"radio\" className=\" with-gap\"\r\n                      checked={!order_ontext.delivery} onClick={() => order_ontext.setDelivery(false)}/>\r\n                      <span className=\" black-text \">Self-pickup</span>\r\n                    </label>\r\n                  </div>\r\n                  \r\n                </div>\r\n                <b className=\"h2\">\r\n                  Sum: {order_ontext.orderSum} €\r\n                </b>\r\n            </div>\r\n\r\n              <div id=\"checkoutButtonWrapper\">\r\n                <Link to=\"/checkout\" disabled={prceedButtonDisabled} \r\n                  className=\"btn blue-grey darken-4\">Checkout <i className=\"material-icons right\">arrow_forward</i>\r\n                </Link>\r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        \r\n      )\r\n\r\n}\r\n\r\nexport default Basket;\r\n","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\management.js",["153","154","155","156","157","158","159"],"import { useHistory, useLocation } from \"react-router-dom\";\r\nimport React, {useContext, useState, useEffect} from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Dish_private from './dish_private';\r\nimport DishPrivateALT from './dish_private_ALT';\r\nimport {GET_DISHES_QUERY, DELETE_DISH_MUTATION, ADD_DISH_MUTATION} from '../gql_queries/index';\r\nimport {AuthContext} from '../context/auth';\r\nimport AddDishForm from './addDishForm';\r\n\r\n\r\n\r\nfunction Management (){\r\n    \r\n\r\n    const history = useHistory();\r\n    const authContext = useContext(AuthContext)\r\n    const { loading, error, data, refetch  } = useQuery(GET_DISHES_QUERY);\r\n\r\n    if(!authContext.user){\r\n        history.push('/')\r\n    }\r\n\r\n    const [dish_to_be_deleted, setDishToBeDeleted] = useState(null)\r\n    const [uniqueCategories, setUniqueCategories] = useState([])\r\n\r\n\r\n    const [deleteDish_execute] = useMutation(DELETE_DISH_MUTATION, {\r\n        variables: {\r\n            id: dish_to_be_deleted\r\n        },\r\n    //    pollInterval: 1000,\r\n        onCompleted: ( response ) => {\r\n          refetch()\r\n        }\r\n      });\r\n\r\n\r\n    useEffect(() => {\r\n        if(data){\r\n            const uniqueCats = [...new Set(data.getDishes.map(dish => {\r\n                return dish.category\r\n            }))]\r\n            setUniqueCategories(uniqueCats)\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        if(dish_to_be_deleted){\r\n            deleteDish_execute()\r\n        \r\n        }\r\n    }, [dish_to_be_deleted]);\r\n\r\n\r\n\r\n\r\n    const deleteDish = (id) => {\r\n        setDishToBeDeleted(id)\r\n    }\r\n\r\n    const updateFinished = () => {\r\n        console.log(\"refetch\")\r\n        refetch()\r\n    }\r\n\r\n\r\n\r\n    const dishes = data ? data.getDishes.map(dish => {\r\n        return <DishPrivateALT  key={dish.id} dish={dish} deleteDish={deleteDish} \r\n                updateFinished={updateFinished} categories={uniqueCategories}/>\r\n    }) : <p>no dishes</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \" id=\"mgmtArea\">\r\n            {dishes}\r\n        </div>\r\n\r\n        \r\n      );\r\n}\r\n\r\n\r\nexport default Management;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\gql_queries\\index.js",[],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\dish_private.js",["160","161"],"import React, {useContext, useState} from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport {OrderContext} from '../context/order';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {CHANGE_DISH_MUTATION} from '../gql_queries/index';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      }\r\n  }));\r\n\r\n\r\n\r\nfunction Dish_private({dish, deleteDish, updateFinished, categories}) {\r\n    const classes = useStyles();\r\n    const [update_mode_state, setUpdateModeState] = useState(false)\r\n    const [availableSwitchState, setAvailableSwitchState] = useState(dish.availible)\r\n    const [update_data, setUpdateData] = useState({\r\n        id: dish.id,\r\n        name: dish.title,\r\n        description: dish.description,\r\n        price: dish.price,\r\n        availible: availableSwitchState === \"on\",\r\n        allergies: dish.allergies,\r\n        category: dish.category,\r\n    })\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    const [update_execute] = useMutation(CHANGE_DISH_MUTATION, {\r\n        variables: update_data,\r\n        onCompleted: (x) => {\r\n            updateFinished()\r\n        }\r\n      });\r\n\r\n    \r\n\r\n    const handleUpdateChange = (e) => {\r\n        if(e.target.name === \"price\"){\r\n            setUpdateData(prevState => ({\r\n                ...prevState,\r\n                price: parseFloat(e.target.value)\r\n            }));\r\n        }else if(e.target.name !== \"availible\") {\r\n            setUpdateData(prevState => ({\r\n                ...prevState,\r\n                [e.target.name]: e.target.value\r\n            }));\r\n        }\r\n    }   \r\n    \r\n\r\n    const update = () => {\r\n        console.log(\"-----------------------------\")\r\n        console.log(update_data)\r\n        update_execute()\r\n        setUpdateModeState(false)\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    let buttons;\r\n    if(update_mode_state){\r\n       buttons = <div>\r\n                    <button onClick={() => update()}>\r\n                        Save\r\n                    </button>\r\n                    <button onClick={() => deleteDish(dish.id)}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n    }else {\r\n        buttons =  <div>\r\n                    <button onClick={() => setUpdateModeState(true)}>\r\n                        Update\r\n                    </button>\r\n                    <button onClick={() => deleteDish(dish.id)}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n    }\r\n\r\n    let infoOrUpdate;\r\n    if(update_mode_state){\r\n        infoOrUpdate = (<div>\r\n            <form  onChange={handleUpdateChange} className={classes.root} noValidate autoComplete=\"off\">\r\n                <div>\r\n                    <TextField\r\n                    //    id=\"standard-textarea\"\r\n                        label=\"Title\"\r\n                        placeholder={dish.name}\r\n                        multiline\r\n                        name=\"name\" />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                    //    id=\"standard-textarea\"\r\n                        label=\"Description\"\r\n                        placeholder={dish.description ? dish.description : \"\"}\r\n                        multiline\r\n                        name=\"description\" />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                    //    id=\"standard-textarea\"\r\n                        label=\"Price\"\r\n                        placeholder={dish.price ? dish.price : \"\"}\r\n                        multiline\r\n                        name=\"price\" />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                    //    id=\"standard-textarea\"\r\n                        label=\"Allergies\"\r\n                        placeholder={dish.allergies ? dish.allergies : \"\"}\r\n                        multiline\r\n                        name=\"allergies\" />\r\n                </div>\r\n                <div>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"category_select\">Category</InputLabel>\r\n                        <Select\r\n                        value={update_data.category} \r\n                        native\r\n                        inputProps={{\r\n                            name: 'category',\r\n                            id: 'category_select',\r\n                        }}\r\n                    >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        {categories.map(cat => {\r\n                            return <option value={cat}>{cat}</option>  \r\n                        })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className=\"switch\">\r\n                    <label>\r\n                        Currently Available\r\n                        <input type=\"checkbox\" \r\n                        name=\"availible\"\r\n                        checked={availableSwitchState} \r\n                        onChange={() => setAvailableSwitchState(!availableSwitchState)} />\r\n                    <span className=\"lever\"></span>\r\n                    </label>\r\n                </div>\r\n                \r\n                \r\n                \r\n                \r\n            </form>\r\n        </div>)\r\n    } else {\r\n        infoOrUpdate = (<div>\r\n            <p>{dish.name}</p>\r\n            <p>{dish.description}</p>\r\n            <p>{dish.price}</p>\r\n        </div>)\r\n    }\r\n\r\n\r\n      return (\r\n        <div className=\"dish\">\r\n\r\n            {infoOrUpdate}\r\n\r\n            {buttons}\r\n            \r\n        </div>\r\n        \r\n      )\r\n\r\n}\r\n\r\nexport default Dish_private;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\dish_public.js",["162","163","164","165","166"],"import React, {useContext, useState} from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport {OrderContext} from '../context/order';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  absolute: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Dish_public({dish}) {\r\n  const classes = useStyles();\r\n  const order_ontext = useContext(OrderContext)\r\n  const [hover, setHover] = useState(false);\r\n\r\n\r\n  \r\n  const addDish = () => {\r\n    const duplicates = order_ontext.orderedDishes.filter(x => x.id === dish.id)\r\n    if(duplicates.length == 0){\r\n      const modifiedDish = {\r\n        ...dish,\r\n        amount: 1\r\n      }\r\n        order_ontext.addDish(modifiedDish)\r\n    } else {\r\n      order_ontext.increaseDish(dish.id)\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n      return (\r\n        <div className={hover ? \"hoverable red lighten-5\" : \"hoverable\"}  style={{padding: \"15px 0 \"}}\r\n          onMouseOver={() => {setHover(true)}}\r\n          onMouseLeave={() => {setHover(false)}}\r\n        >\r\n          <div className=\"container singleDish\">\r\n            <div className=\"\">\r\n              <div className=\"dishTitle\">\r\n                <span>{dish.name + \"  \"}   </span>\r\n                {hover && dish.allergies !== \"\" && \r\n                  <Tooltip title={\"Allergies: \" + dish.allergies}>\r\n                    <InfoOutlinedIcon fontSize=\"small\"/>\r\n                </Tooltip>}\r\n              </div>\r\n              <div>\r\n                {hover && dish.description !== \"\" && <span>{dish.description}</span>}\r\n              </div>\r\n              <div>\r\n                {dish.price} €\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"wrapToCenter\">\r\n              {hover ? (\r\n              <a class=\"btn-floating btn-medium waves-effect waves-light green\" onClick={addDish}>\r\n                <i class=\"material-icons\">add</i>\r\n              </a>\r\n          ) : (<div></div>)}\r\n                \r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      )\r\n\r\n}\r\n\r\nexport default Dish_public;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\addDishForm.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import {useState, useEffect, useContext } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client';\r\nimport {LOGIN_MUTATION} from '../gql_queries/index';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {AuthContext} from '../context/auth';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction AddDishForm ({addDish, categories}) {\r\n    const classes = useStyles();\r\n    const [allergiesChecked, setAllergiesChecked] = useState(false);\r\n    \r\n    const [inputFieldsValues, setInputFieldsValues] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        availible: true,\r\n        price: \"\",\r\n        allergies: \"\",\r\n        category: \"\"\r\n    });\r\n    const [newCategory, setNewCategory] = useState(inputFieldsValues.category);\r\n    const [selectedCategory, setSelectedCategory] = useState(inputFieldsValues.category);\r\n\r\n    useEffect(() => {\r\n        if(inputFieldsValues.category === \"\"){\r\n            if(newCategory !== \"\"){\r\n                setNewCategory(\"\")\r\n            } else {\r\n                setSelectedCategory(\"\")\r\n            }\r\n            \r\n        }\r\n    }, [inputFieldsValues]);\r\n\r\n\r\n\r\n\r\n\r\n    const handleCheck = (event) => {\r\n        setAllergiesChecked(!allergiesChecked);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        let category = \"\"\r\n        if(newCategory !== \"\"){\r\n            category = newCategory\r\n        } else{\r\n            category = selectedCategory\r\n        }\r\n        const newDish = {\r\n            name: inputFieldsValues.title,\r\n            description: inputFieldsValues.description,\r\n            price: parseFloat(inputFieldsValues.price), \r\n            availible: inputFieldsValues.availible, \r\n            allergies: inputFieldsValues.allergies,\r\n            category\r\n        }\r\n        setInputFieldsValues({\r\n            title: \"\",\r\n            description: \"\",\r\n            availible: true,\r\n            price: \"\",\r\n            allergies: \"\",\r\n            category: \"\",\r\n        })\r\n\r\n\r\n        addDish(newDish)\r\n\r\n\r\n        console.log(newDish)\r\n        \r\n    }\r\n\r\n    \r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.name)\r\n        if([\"title\", \"description\", \"price\", \"allergies\"].includes(e.target.name)){\r\n            setInputFieldsValues(prevState =>( {\r\n                ...prevState,\r\n                [e.target.name]: e.target.value\r\n            }))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const handleNewCategoryChange = (e) => {\r\n        setNewCategory(e.target.value)\r\n        if(e.target.value !== \"\"){\r\n            setSelectedCategory(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSelectedCategoryChange = (e) => {\r\n        setSelectedCategory(e.target.value)\r\n        if(e.target.value !== \"\"){\r\n            setNewCategory(\"\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n  return (\r\n    <div className=\"addDishForm card \">\r\n        <div  className=\" card-content \">\r\n        <form   onChange={handleInputChange} className=\"\">\r\n\r\n            <div className=\"col\">\r\n                <label>\r\n                Title:\r\n                <input type=\"text\" name=\"title\"  value={inputFieldsValues.title} />\r\n                </label>\r\n                <label>\r\n                    Description:\r\n                    <input type=\"text\" name=\"description\" value={inputFieldsValues.description} />\r\n                </label>\r\n                <label>\r\n                    Price:\r\n                    <input type=\"text\" name=\"price\" value={inputFieldsValues.price} />\r\n                </label>\r\n            </div>\r\n        \r\n            <div className=\"col\">\r\n                <div className=\"row\" style={{margin: \"20px 0\"}}>\r\n                    <div>\r\n                        <label>\r\n                            <input type=\"checkbox\" \r\n                                className=\"filled-in\" \r\n                                checked={allergiesChecked}\r\n                                onChange={handleCheck} />\r\n                            <span>Allergical ingredients</span>\r\n                        </label>\r\n                    </div>\r\n                    {allergiesChecked && <div>\r\n                        <label>\r\n                        Enter ingredients which might cause an allergical reaction:\r\n                        <input type=\"text\" name=\"allergies\" value={inputFieldsValues.allergies} />\r\n                        </label>\r\n                    </div>}\r\n                </div>\r\n            \r\n                <div className=\"row\">\r\n                    <div style={{margin: \"0 10px\"}}>\r\n                    <label>\r\n                        New Category:\r\n                        <input type=\"text\" name=\"newCat\" \r\n                            onChange={(e) => handleNewCategoryChange(e)} \r\n                            value={newCategory}/>\r\n                    </label>\r\n                    </div>\r\n                    <FormControl className={classes.formControl} \r\n                        \r\n                        >\r\n                        <InputLabel htmlFor=\"category_select\">Category</InputLabel>\r\n                        <Select\r\n                        value={selectedCategory} \r\n                        onChange={(e) => handleSelectedCategoryChange(e)}\r\n                        native\r\n                        inputProps={{\r\n                            name: 'category',\r\n                            id: 'category_select',\r\n                        }}\r\n                    >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        {categories.map(cat => {\r\n                            return <option value={cat}>{cat}</option>  \r\n                        })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n            </div>\r\n            </form>\r\n            <div class=\"card-action wrapToCenter\" >\r\n                <button type=\"submit\" onClick={handleSubmit} className=\"waves-effect waves-light btn\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n      \r\n  );\r\n\r\n};\r\n \r\n\r\nexport default AddDishForm;\r\n\r\n\r\n","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\checkout.js",["181","182"],"import React, {useContext} from 'react';\r\nimport {AuthContext} from '../context/auth';\r\nimport {OrderContext} from '../context/order';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport CustomerInfoForm from './customerInfoForm';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction  Checkout() {\r\n  const history = useHistory();\r\n  const authContext = useContext(AuthContext)\r\n  const order_ontext = useContext(OrderContext)\r\n\r\n\r\n\r\n    const order = order_ontext.orderedDishes.map((dish) => {\r\n        return (\r\n            <div style={{padding: \"10px\"}}>\r\n                <div>\r\n                {dish.amount}x {dish.name}\r\n                </div>\r\n                <div>\r\n                {dish.price * dish.amount} €\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n  \r\n\r\n\r\n      return (\r\n        <div className=\"container \" >\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col s12 m6 \" id=\"checkoutOrderRecapWrapper\">\r\n              <div className=\"somePaddingTOP\">\r\n                <Link to=\"/\" className=\"btn btn-primary\"><i class=\"material-icons right\">arrow_backward</i> Back to Menu </Link>\r\n              </div>\r\n              <div className=\"somePaddingTOP\">\r\n                  Your order:\r\n              </div>\r\n              <div>\r\n                  {order}\r\n              </div>\r\n              <div className=\"somePaddingTOP\">\r\n                <b>Total: {order_ontext.orderSum} €</b>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col s12 m6\">\r\n              <CustomerInfoForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Checkout;\r\n\r\n","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\customerInfoForm.js",["183","184","185","186","187","188"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useMutation } from '@apollo/client';\r\nimport {SEND_ORDER_MUTATION} from '../gql_queries/index';\r\nimport {AuthContext} from '../context/auth';\r\nimport {OrderContext} from '../context/order';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction  CustomerInfoForm() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const authContext = useContext(AuthContext)\r\n  const order_ontext = useContext(OrderContext)\r\n  const [paymentMethodSelected, setPaymentMethodSelected] = useState(false)\r\n  const [formFilled, setFormFilled] = useState(false)\r\n  \r\n  const [customerData, setCustomerData] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    address: {\r\n        street: \"\",\r\n        zip: \"\"\r\n    },\r\n    order: {\r\n        dishes: order_ontext.orderedDishes.map(dish => dish.id),\r\n        delivery: order_ontext.delivery,\r\n        payment: order_ontext.payment,\r\n        sum: order_ontext.orderSum\r\n    }\r\n  });\r\n\r\n\r\n  const [submitOrder] = useMutation(SEND_ORDER_MUTATION, {\r\n    variables: {\r\n        dishes: customerData.order.dishes,\r\n        delivery: customerData.order.delivery,\r\n        payment: customerData.order.payment,\r\n        sum: parseFloat(customerData.order.sum),\r\n        name: customerData.name,\r\n        email: customerData.email,\r\n        phone: customerData.phone,\r\n        address: customerData.address.street + \"/\" + customerData.address.zip\r\n    },\r\n    onCompleted: (response) => {\r\n        console.log(\"order sent\")\r\n        order_ontext.reset()\r\n        history.push('/finished')\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    order_ontext.setPayment(\"cash\")\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(order_ontext.delivery){   \r\n        if(customerData.name !== \"\" \r\n            && customerData.address.street !== \"\" \r\n            && customerData.address.zip !== \"\" \r\n            && customerData.phone !== \"\"){\r\n                console.log(\"bre\")\r\n                setFormFilled(true)\r\n        }\r\n    } else {\r\n        if(customerData.phone !== \"\"){\r\n            setFormFilled(true)\r\n        }\r\n    }\r\n}, [customerData]);\r\n\r\n  \r\n\r\n  function handleFormChange(e){\r\n      if(e.target.name !== \"group1\"){\r\n            if(e.target.name === \"street\" || e.target.name === \"zip\"){\r\n                setCustomerData(prevState => ({\r\n                    ...prevState,\r\n                    address: {\r\n                        ...prevState.address,\r\n                        [e.target.name]: e.target.value\r\n                }}));\r\n            } else {    // name, phone, email\r\n                console.log(e.target.name)\r\n                console.log(e.target.value)\r\n                setCustomerData(prevState => ({\r\n                    ...prevState,\r\n                    [e.target.name]: e.target.value\r\n                    \r\n                }));\r\n            }  \r\n        } else {       // payment radio buttons\r\n            order_ontext.setPayment(e.target.value)\r\n            if(!paymentMethodSelected){\r\n                setPaymentMethodSelected(!paymentMethodSelected)\r\n            }\r\n            setCustomerData(prevState => ({\r\n                ...prevState,\r\n                order: {\r\n                    ...prevState.order,\r\n                    payment: e.target.value\r\n                }\r\n                \r\n            }));\r\n            \r\n        }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    console.log(\"-------------------------\")\r\n    console.log(customerData)\r\n    submitOrder()\r\n\r\n    console.log(\"paymentMethodSelected\")\r\n    console.log(paymentMethodSelected)\r\n    console.log(\"formFilled\")\r\n    console.log(formFilled)\r\n\r\n}\r\n  \r\n\r\n\r\n      return (\r\n          <div className=\"row someMorePaddingTOP\">\r\n            <form  noValidate autoComplete=\"off\" \r\n                onChange={handleFormChange} onSubmit={handleSubmit}>\r\n                <div>\r\n                <label>\r\n                    Name:\r\n                        <input type=\"text\" name=\"name\" className=\"\"/>\r\n                    </label>\r\n                    <label>\r\n                    Address:\r\n                        <input type=\"text\" name=\"street\" className=\"\"/>\r\n                    </label>\r\n                    <label>\r\n                    ZIP Code:\r\n                        <input type=\"text\" name=\"zip\" className=\"\"/>\r\n                    </label>\r\n                    <label>\r\n                    Phone:\r\n                        <input type=\"text\" name=\"phone\" className=\"\"/>\r\n                    </label>\r\n                    <label>\r\n                    Email:\r\n                        <input type=\"text\" name=\"email\" className=\"\"/>\r\n                    </label>\r\n                </div>\r\n                <div className=\"wrapToCenter \">\r\n                    <div className=\"MobileSwitchFlexToCol\">\r\n                    <label className=\"somePaddingSIDE\">\r\n                        <input name=\"group1\" type=\"radio\"  value=\"cash\" />\r\n                        <span>Cash</span>\r\n                    </label>\r\n                    <label className=\"somePaddingSIDE\">\r\n                        <input name=\"group1\" type=\"radio\" value=\"pp\" />\r\n                        <span>Paypal</span>\r\n                    </label>\r\n                    <label className=\"somePaddingSIDE\">\r\n                        <input name=\"group1\" type=\"radio\" value=\"cc\" />\r\n                        <span>Credit Card</span>\r\n                    </label>\r\n\r\n                    </div>\r\n                    \r\n              </div>\r\n                <div className=\"wrapToCenter somePaddingTOP\">\r\n                    <button type=\"submit\" disabled={ !(paymentMethodSelected && formFilled)} \r\n                    className=\"waves-effect waves-light btn\">Finish Order</button>\r\n                </div>\r\n            </form>\r\n          </div>\r\n      )\r\n\r\n}\r\n\r\nexport default CustomerInfoForm;\r\n\r\n\r\n// !(paymentMethodSelected && formFilled)","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\finished.js",["189"],"import { collectFields } from \"graphql/execution/execute\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\nfunction Finished (){\r\n\r\n\r\n    return (\r\n        <div id=\"finished\" style={{padding: \"20px\"}}>\r\n            <div style={{marginBottom: \"20px\"}}>\r\n            Thank you for your order\r\n            </div>\r\n            <div>\r\n               <Link to=\"/\" \r\n                className=\"waves-effect waves-light btn\">Back to Menu \r\n                </Link> \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n\r\n        \r\n      );\r\n}\r\n\r\n\r\nexport default Finished;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\stats.js",["190","191","192","193","194","195","196","197","198","199"],"import {useState, useEffect, useContext } from 'react';\r\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client';\r\n\r\nimport {GET_STATS_MUTATION} from '../gql_queries/index';\r\nimport {GET_CUSTOMER_INFO_MUTATION} from '../gql_queries/index';\r\n\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {AuthContext} from '../context/auth';\r\n\r\nimport 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Stats () {\r\n    const history = useHistory();\r\n    const authContext = useContext(AuthContext)\r\n    if(!authContext.user){\r\n      history.push('/')\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  const [selectedCustomerID, setSelectedCustomerID] = React.useState(null);\r\n  const [customerDetails, setCustomerDetails] = React.useState(\"\");\r\n\r\n  const [statsData, setStatsData] = React.useState(null);\r\n\r\n  const [getStats_execute] = useMutation(GET_STATS_MUTATION, {\r\n    variables: {\r\n      dateString: \"\" + selectedDate\r\n    },\r\n    onCompleted: ( response ) => {\r\n      if(response){\r\n        setStatsData(response)\r\n      }\r\n    }\r\n  });\r\n\r\n  const [getCustomerInfo_execute] = useMutation(GET_CUSTOMER_INFO_MUTATION, {\r\n    variables: {\r\n      id: selectedCustomerID\r\n    },\r\n    onCompleted: ( response ) => {\r\n      if(response){\r\n        console.log(\"response\")\r\n        console.log(response.getCustomerInfo)\r\n       setCustomerDetails(response.getCustomerInfo)\r\n      }\r\n    }\r\n  });\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  getStats_execute()\r\n  }, [])\r\n\r\nuseEffect(() => {\r\n  getCustomerInfo_execute()\r\n  }, [selectedCustomerID])\r\n\r\n\r\n  \r\n\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(\"\" + date);\r\n      getStats_execute()\r\n      \r\n    };\r\n\r\n\r\n\r\n    const handlePopover = (event, id) => {\r\n      \r\n      setSelectedCustomerID(id)\r\n\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet stats = \"no stats\"\r\nif(statsData){\r\n  const statData = statsData.getStats.slice(1).map(singleStat => {\r\n    return JSON.parse(singleStat)\r\n  })\r\n\r\n  stats = statData.map(stat => {\r\n    let sum;\r\n    const sumString = stat.order.sum + \"\";\r\n    if( sumString.includes(\".\") ){\r\n      if(sumString.split(\".\")[1].length > 1){\r\n        sum = sumString\r\n      } else {\r\n        sum = sumString + \"0\"\r\n      }\r\n    } else {\r\n      sum = sumString + \".00\"\r\n    }\r\n\r\n    return (\r\n      <TableRow key={stat.id}>\r\n          <TableCell align=\"left\">\r\n            {stat.order.date.hour}:{stat.order.date.min !== 0 ? stat.order.date.min : stat.order.date.min + \"0\"}\r\n          </TableCell>\r\n          <TableCell align=\"left\">{\r\n            stat.dishes.length > 0 ?\r\n              stat.dishes.map(dish => {\r\n                return (<div>{dish.name}</div>)\r\n                  })\r\n              : <div><i>This dish has been deleted from the menu</i></div>\r\n                \r\n                }\r\n          </TableCell>\r\n          <TableCell align=\"left\">{sum} €</TableCell>\r\n          <TableCell align=\"left\">\r\n            <Badge badgeContent={stat.customer.ordered === 1 ? \"New\" : stat.customer.ordered} \r\n              color={stat.customer.ordered === 1 ? \"secondary\" : \"primary\"}\r\n              onClick={(e) => {handlePopover(e, stat.customer.id)}}\r\n              style={{cursor: \"pointer\"}} \r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}>\r\n             <PersonIcon style={{ fontSize: 30 }} />\r\n            </Badge>\r\n          </TableCell>\r\n      </TableRow> \r\n    )\r\n  })\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label=\"Date picker inline\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n      </div>\r\n\r\n      <div>\r\n          Latest Orders from: {statsData && statsData.getStats[0]}\r\n      </div>\r\n\r\n      <div>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell align=\"left\">Dishes</TableCell>\r\n              <TableCell >Sum</TableCell>\r\n              <TableCell >Customer</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n              {stats}\r\n    \r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n\r\n\r\n\r\n      <div>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          \r\n            <div className=\"container customerInfoList\">\r\n              {customerDetails && (\r\n                <div>\r\n                  <div className=\"customerInfoItem\">\r\n                    <StarBorderIcon  />\r\n                    <div>Favorite Dish: {customerDetails.favDish }</div>\r\n                  </div>\r\n                  <div className=\"customerInfoItem\">\r\n                    <LocalAtmIcon  />\r\n                    <div>Prefered Payment: {customerDetails.favPayment }</div>\r\n                  </div>\r\n                  <div className=\"customerInfoItem\">\r\n                    <ExitToAppIcon  />\r\n                    <div>Prefered Delivery: {customerDetails.favDelivery ? \"Delivery\" : \"Self-Pickup\"}</div>\r\n                  </div>\r\n                  <div className=\"customerInfoItem\">\r\n                    <AssessmentIcon  /> \r\n                    <div>Total Sum Ordered: {customerDetails.totalSum } €</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>    \r\n        </Typography>\r\n\r\n      </Popover>\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n \r\n\r\nexport default Stats;\r\n\r\n","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\dish_private_ALT.js",[],"C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\addDish.js",["200","201","202","203"],"import { useHistory } from \"react-router-dom\";\r\nimport React, {useContext, useState, useEffect} from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport {GET_DISHES_QUERY, DELETE_DISH_MUTATION, ADD_DISH_MUTATION} from '../gql_queries/index';\r\nimport {AuthContext} from '../context/auth';\r\nimport AddDishForm from './addDishForm';\r\n\r\n\r\n\r\nfunction AddDish (){\r\n    \r\n\r\n    const history = useHistory();\r\n    const authContext = useContext(AuthContext)\r\n    const { loading, error, data, refetch  } = useQuery(GET_DISHES_QUERY);\r\n\r\n    if(!authContext.user){\r\n        history.push('/')\r\n    }\r\n\r\n\r\n    const [uniqueCategories, setUniqueCategories] = useState([])\r\n    const [dish_to_be_added, setDishToBeAdded] = useState({\r\n            name: null,\r\n            description: null,\r\n            price: null, \r\n            availible: null, \r\n            allergies: null,\r\n            category: null\r\n    })\r\n\r\n\r\n    const [addDish_execute] = useMutation(ADD_DISH_MUTATION, {\r\n        variables: {\r\n            name: dish_to_be_added.name,\r\n            description: dish_to_be_added.description,\r\n            price: dish_to_be_added.price, \r\n            availible: dish_to_be_added.availible, \r\n            allergies: dish_to_be_added.allergies,\r\n            category: dish_to_be_added.category\r\n        },\r\n        onCompleted: ( response ) => {\r\n          refetch()\r\n        }\r\n      });\r\n\r\n\r\n    useEffect(() => {\r\n        if(data){\r\n            const uniqueCats = [...new Set(data.getDishes.map(dish => {\r\n                return dish.category\r\n            }))]\r\n            setUniqueCategories(uniqueCats)\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(dish_to_be_added){\r\n            addDish_execute()\r\n        }\r\n    }, [dish_to_be_added]);\r\n\r\n\r\n    \r\n    const addDish = (newDish) => {\r\n        setDishToBeAdded(newDish)   // ok\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \" id=\"mgmtArea\">\r\n            <AddDishForm addDish={addDish} categories={uniqueCategories}/>           \r\n        </div>  \r\n      );\r\n}\r\n\r\n\r\nexport default AddDish;","C:\\Users\\matwo\\OneDrive\\Desktop\\restaurantApp\\restaurantApp\\restaurant_app_frontend\\src\\components\\about.js",["204","205"],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":55,"nodeType":"212","messageId":"213","endLine":1,"endColumn":58},{"ruleId":"210","severity":1,"message":"214","line":1,"column":60,"nodeType":"212","messageId":"213","endLine":1,"endColumn":68},{"ruleId":"210","severity":1,"message":"215","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":12},{"ruleId":"210","severity":1,"message":"216","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":14},{"ruleId":"210","severity":1,"message":"217","line":1,"column":19,"nodeType":"212","messageId":"213","endLine":1,"endColumn":28},{"ruleId":"210","severity":1,"message":"218","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":16},{"ruleId":"210","severity":1,"message":"219","line":2,"column":18,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"220","line":2,"column":24,"nodeType":"212","messageId":"213","endLine":2,"endColumn":29},{"ruleId":"210","severity":1,"message":"221","line":2,"column":31,"nodeType":"212","messageId":"213","endLine":2,"endColumn":43},{"ruleId":"210","severity":1,"message":"214","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"222","line":3,"column":20,"nodeType":"212","messageId":"213","endLine":3,"endColumn":32},{"ruleId":"210","severity":1,"message":"223","line":5,"column":22,"nodeType":"212","messageId":"213","endLine":5,"endColumn":33},{"ruleId":"210","severity":1,"message":"224","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":12},{"ruleId":"225","severity":1,"message":"226","line":17,"column":8,"nodeType":"227","endLine":17,"endColumn":10,"suggestions":"228"},{"ruleId":"225","severity":1,"message":"229","line":24,"column":8,"nodeType":"227","endLine":24,"endColumn":32,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":76,"column":18,"nodeType":"233","endLine":76,"endColumn":52},{"ruleId":"231","severity":1,"message":"232","line":79,"column":17,"nodeType":"233","endLine":79,"endColumn":52},{"ruleId":"231","severity":1,"message":"232","line":81,"column":17,"nodeType":"233","endLine":81,"endColumn":51},{"ruleId":"231","severity":1,"message":"234","line":92,"column":13,"nodeType":"233","endLine":93,"endColumn":80},{"ruleId":"231","severity":1,"message":"234","line":99,"column":13,"nodeType":"233","endLine":100,"endColumn":77},{"ruleId":"231","severity":1,"message":"234","line":106,"column":13,"nodeType":"233","endLine":107,"endColumn":79},{"ruleId":"210","severity":1,"message":"235","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":20},{"ruleId":"210","severity":1,"message":"223","line":1,"column":22,"nodeType":"212","messageId":"213","endLine":1,"endColumn":33},{"ruleId":"210","severity":1,"message":"222","line":2,"column":20,"nodeType":"212","messageId":"213","endLine":2,"endColumn":32},{"ruleId":"210","severity":1,"message":"236","line":2,"column":34,"nodeType":"212","messageId":"213","endLine":2,"endColumn":45},{"ruleId":"210","severity":1,"message":"237","line":5,"column":9,"nodeType":"212","messageId":"213","endLine":5,"endColumn":20},{"ruleId":"210","severity":1,"message":"238","line":40,"column":22,"nodeType":"212","messageId":"213","endLine":40,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":58,"column":68,"nodeType":"241","messageId":"242","endLine":58,"endColumn":70},{"ruleId":"239","severity":1,"message":"240","line":124,"column":63,"nodeType":"241","messageId":"242","endLine":124,"endColumn":65},{"ruleId":"243","severity":1,"message":"244","line":126,"column":44,"nodeType":"233","endLine":126,"endColumn":84},{"ruleId":"231","severity":1,"message":"234","line":185,"column":17,"nodeType":"233","endLine":189,"endColumn":22},{"ruleId":"210","severity":1,"message":"235","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":20},{"ruleId":"210","severity":1,"message":"223","line":1,"column":22,"nodeType":"212","messageId":"213","endLine":1,"endColumn":33},{"ruleId":"239","severity":1,"message":"245","line":46,"column":57,"nodeType":"246","messageId":"242","endLine":46,"endColumn":65},{"ruleId":"210","severity":1,"message":"214","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":2,"column":20,"nodeType":"212","messageId":"213","endLine":2,"endColumn":23},{"ruleId":"210","severity":1,"message":"247","line":8,"column":9,"nodeType":"212","messageId":"213","endLine":8,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":15,"column":63,"nodeType":"250","messageId":"251","endLine":15,"endColumn":65},{"ruleId":"225","severity":1,"message":"252","line":19,"column":6,"nodeType":"227","endLine":19,"endColumn":8,"suggestions":"253"},{"ruleId":"225","severity":1,"message":"254","line":29,"column":6,"nodeType":"227","endLine":29,"endColumn":34,"suggestions":"255"},{"ruleId":"248","severity":1,"message":"256","line":37,"column":26,"nodeType":"250","messageId":"251","endLine":37,"endColumn":28},{"ruleId":"210","severity":1,"message":"223","line":1,"column":22,"nodeType":"212","messageId":"213","endLine":1,"endColumn":33},{"ruleId":"210","severity":1,"message":"257","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":20},{"ruleId":"210","severity":1,"message":"258","line":6,"column":49,"nodeType":"212","messageId":"213","endLine":6,"endColumn":66},{"ruleId":"210","severity":1,"message":"259","line":8,"column":8,"nodeType":"212","messageId":"213","endLine":8,"endColumn":19},{"ruleId":"210","severity":1,"message":"260","line":17,"column":13,"nodeType":"212","messageId":"213","endLine":17,"endColumn":20},{"ruleId":"210","severity":1,"message":"238","line":17,"column":22,"nodeType":"212","messageId":"213","endLine":17,"endColumn":27},{"ruleId":"225","severity":1,"message":"261","line":52,"column":8,"nodeType":"227","endLine":52,"endColumn":28,"suggestions":"262"},{"ruleId":"210","severity":1,"message":"263","line":1,"column":16,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"264","line":3,"column":9,"nodeType":"212","messageId":"213","endLine":3,"endColumn":21},{"ruleId":"210","severity":1,"message":"214","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":18},{"ruleId":"210","severity":1,"message":"265","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":18},{"ruleId":"210","severity":1,"message":"266","line":27,"column":9,"nodeType":"212","messageId":"213","endLine":27,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":35,"column":26,"nodeType":"250","messageId":"251","endLine":35,"endColumn":28},{"ruleId":"231","severity":1,"message":"234","line":73,"column":15,"nodeType":"233","endLine":73,"endColumn":99},{"ruleId":"210","severity":1,"message":"263","line":1,"column":30,"nodeType":"212","messageId":"213","endLine":1,"endColumn":40},{"ruleId":"210","severity":1,"message":"218","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":16},{"ruleId":"210","severity":1,"message":"219","line":2,"column":18,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"220","line":2,"column":24,"nodeType":"212","messageId":"213","endLine":2,"endColumn":29},{"ruleId":"210","severity":1,"message":"221","line":2,"column":31,"nodeType":"212","messageId":"213","endLine":2,"endColumn":43},{"ruleId":"210","severity":1,"message":"214","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"222","line":3,"column":20,"nodeType":"212","messageId":"213","endLine":3,"endColumn":32},{"ruleId":"210","severity":1,"message":"236","line":3,"column":34,"nodeType":"212","messageId":"213","endLine":3,"endColumn":45},{"ruleId":"210","severity":1,"message":"267","line":4,"column":9,"nodeType":"212","messageId":"213","endLine":4,"endColumn":23},{"ruleId":"210","severity":1,"message":"235","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":20},{"ruleId":"210","severity":1,"message":"223","line":5,"column":22,"nodeType":"212","messageId":"213","endLine":5,"endColumn":33},{"ruleId":"210","severity":1,"message":"237","line":6,"column":9,"nodeType":"212","messageId":"213","endLine":6,"endColumn":20},{"ruleId":"210","severity":1,"message":"268","line":12,"column":8,"nodeType":"212","messageId":"213","endLine":12,"endColumn":16},{"ruleId":"225","severity":1,"message":"269","line":54,"column":8,"nodeType":"227","endLine":54,"endColumn":27,"suggestions":"270"},{"ruleId":"210","severity":1,"message":"247","line":14,"column":9,"nodeType":"212","messageId":"213","endLine":14,"endColumn":16},{"ruleId":"210","severity":1,"message":"271","line":15,"column":9,"nodeType":"212","messageId":"213","endLine":15,"endColumn":20},{"ruleId":"210","severity":1,"message":"272","line":6,"column":22,"nodeType":"212","messageId":"213","endLine":6,"endColumn":26},{"ruleId":"210","severity":1,"message":"273","line":8,"column":8,"nodeType":"212","messageId":"213","endLine":8,"endColumn":17},{"ruleId":"210","severity":1,"message":"266","line":25,"column":9,"nodeType":"212","messageId":"213","endLine":25,"endColumn":16},{"ruleId":"210","severity":1,"message":"271","line":26,"column":9,"nodeType":"212","messageId":"213","endLine":26,"endColumn":20},{"ruleId":"225","severity":1,"message":"252","line":68,"column":6,"nodeType":"227","endLine":68,"endColumn":8,"suggestions":"274"},{"ruleId":"225","severity":1,"message":"275","line":84,"column":4,"nodeType":"227","endLine":84,"endColumn":18,"suggestions":"276"},{"ruleId":"210","severity":1,"message":"277","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":23},{"ruleId":"210","severity":1,"message":"278","line":1,"column":9,"nodeType":"212","messageId":"213","endLine":1,"endColumn":17},{"ruleId":"210","severity":1,"message":"214","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":18},{"ruleId":"210","severity":1,"message":"222","line":2,"column":20,"nodeType":"212","messageId":"213","endLine":2,"endColumn":32},{"ruleId":"210","severity":1,"message":"223","line":7,"column":22,"nodeType":"212","messageId":"213","endLine":7,"endColumn":33},{"ruleId":"210","severity":1,"message":"279","line":16,"column":3,"nodeType":"212","messageId":"213","endLine":16,"endColumn":21},{"ruleId":"210","severity":1,"message":"280","line":22,"column":8,"nodeType":"212","messageId":"213","endLine":22,"endColumn":22},{"ruleId":"210","severity":1,"message":"281","line":25,"column":8,"nodeType":"212","messageId":"213","endLine":25,"endColumn":13},{"ruleId":"210","severity":1,"message":"282","line":38,"column":8,"nodeType":"212","messageId":"213","endLine":38,"endColumn":14},{"ruleId":"225","severity":1,"message":"283","line":109,"column":6,"nodeType":"227","endLine":109,"endColumn":8,"suggestions":"284"},{"ruleId":"225","severity":1,"message":"285","line":113,"column":6,"nodeType":"227","endLine":113,"endColumn":26,"suggestions":"286"},{"ruleId":"210","severity":1,"message":"287","line":4,"column":27,"nodeType":"212","messageId":"213","endLine":4,"endColumn":47},{"ruleId":"210","severity":1,"message":"260","line":15,"column":13,"nodeType":"212","messageId":"213","endLine":15,"endColumn":20},{"ruleId":"210","severity":1,"message":"238","line":15,"column":22,"nodeType":"212","messageId":"213","endLine":15,"endColumn":27},{"ruleId":"225","severity":1,"message":"288","line":63,"column":8,"nodeType":"227","endLine":63,"endColumn":26,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":24,"column":29,"nodeType":"233","endLine":24,"endColumn":107},{"ruleId":"290","severity":1,"message":"291","line":25,"column":29,"nodeType":"233","endLine":25,"endColumn":105},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Test' is defined but never used.","'Footer' is defined but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'useLazyQuery' is defined but never used.","'useLocation' is defined but never used.","'logo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["294"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["295"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useHistory' is defined but never used.","'useMutation' is defined but never used.","'AuthContext' is defined but never used.","'error' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-pascal-case","Imported JSX component Dish_public must be in PascalCase or SCREAMING_SNAKE_CASE","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'order_ontext'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has a missing dependency: 'prceedButtonDisabled'. Either include it or remove the dependency array.",["297"],"Expected '!==' and instead saw '!='.","'Dish_private' is defined but never used.","'ADD_DISH_MUTATION' is defined but never used.","'AddDishForm' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'deleteDish_execute'. Either include it or remove the dependency array.",["298"],"'useContext' is defined but never used.","'OrderContext' is defined but never used.","'IconButton' is defined but never used.","'classes' is assigned a value but never used.","'LOGIN_MUTATION' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has a missing dependency: 'newCategory'. Either include it or remove the dependency array.",["299"],"'authContext' is assigned a value but never used.","'Link' is defined but never used.","'TextField' is defined but never used.",["300"],"React Hook useEffect has a missing dependency: 'order_ontext.delivery'. Either include it or remove the dependency array.",["301"],"'collectFields' is defined but never used.","'useState' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getStats_execute'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'getCustomerInfo_execute'. Either include it or remove the dependency array.",["303"],"'DELETE_DISH_MUTATION' is defined but never used.","React Hook useEffect has a missing dependency: 'addDish_execute'. Either include it or remove the dependency array.",["304"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"309","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},"Update the dependencies array to be: [context]",{"range":"326","text":"327"},"Update the dependencies array to be: [context.activeMenuItem, history]",{"range":"328","text":"329"},"Update the dependencies array to be: [order_ontext]",{"range":"330","text":"331"},"Update the dependencies array to be: [order_ontext.orderedDishes, prceedButtonDisabled]",{"range":"332","text":"333"},"Update the dependencies array to be: [deleteDish_execute, dish_to_be_deleted]",{"range":"334","text":"335"},"Update the dependencies array to be: [inputFieldsValues, newCategory]",{"range":"336","text":"337"},{"range":"338","text":"331"},"Update the dependencies array to be: [customerData, order_ontext.delivery]",{"range":"339","text":"340"},"Update the dependencies array to be: [getStats_execute]",{"range":"341","text":"342"},"Update the dependencies array to be: [getCustomerInfo_execute, selectedCustomerID]",{"range":"343","text":"344"},"Update the dependencies array to be: [addDish_execute, dish_to_be_added]",{"range":"345","text":"346"},[440,442],"[context]",[689,713],"[context.activeMenuItem, history]",[624,626],"[order_ontext]",[847,875],"[order_ontext.orderedDishes, prceedButtonDisabled]",[1486,1506],"[deleteDish_execute, dish_to_be_deleted]",[1636,1655],"[inputFieldsValues, newCategory]",[1978,1980],[2416,2430],"[customerData, order_ontext.delivery]",[2981,2983],"[getStats_execute]",[3041,3061],"[getCustomerInfo_execute, selectedCustomerID]",[1764,1782],"[addDish_execute, dish_to_be_added]"]